{"version":3,"sources":["assets/3.png","hooks/useForm.js","types/types.js","firebase/firebase-config.js","actions/ui.js","actions/auth.js","components/login/LoginScreen.jsx","data/heroes.js","components/hero/HeroCard.jsx","components/hero/HeroList.jsx","selectors/getHeroesByPublisher.js","components/dc/DcScreen.jsx","components/addfield/AddInputFields.js","components/hero/HeroScreen.jsx","selectors/getBy_id.js","components/marvel/MarvelScreen.jsx","components/search/SearchScreen.jsx","selectors/getHeroesByName.js","selectors/getByEstado.js","components/ui/Navbar.jsx","components/fomulario/Formulario.jsx","components/imagen/Imagen.jsx","helpers/calendar-messages-es.js","components/calendario/Calendario.jsx","routers/DashboardRouter.jsx","routers/PrivateRouter.js","routers/PublicRouter.js","components/login/RegisterScreen.jsx","routers/AppRouter.jsx","reducers/authReducer.js","reducers/uiReducer.js","store/store.js","HeroesApp.js","index.js"],"names":["useForm","initialState","arguments","length","undefined","values","setValues","useState","reset","handleInputChange","_ref","target","type","name","checked","value","types","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","googleAuthProvider","auth","GoogleAuthProvider","setError","err","payload","removeError","finishLoading","startLoginEmailPassword","email","password","dispatch","signInWithEmailAndPassword","then","user","login","uid","displayName","catch","e","console","log","logout","LoginScreen","useDispatch","loading","useSelector","state","ui","msgError","formValues","_jsx","className","children","_jsxs","onSubmit","preventDefault","src","logo","alt","width","height","role","id","placeholder","onChange","required","htmlFor","disabled","GoogleButton","onClick","handleGoogleLogin","signInWithPopup","_ref3","Link","to","Data","async","data","axios","get","res","HeroCard","_id","maquina","estado","fecha_entrega","concat","style","Date","toLocaleDateString","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","delete","window","location","reload","bind","HeroList","publisher","heroes","setData","useEffect","filter","hero","GetHeroesByPublisher","map","DcScreen","AddInputFields","crudo","tit_tabla","params","useParams","talla","setTalla","uno","dos","tres","cuatro","setformValues","detalle","cetme","plano","cetme1","plano1","cetme2","plano2","cetme3","plano3","InputChange","list","index","update","put","showConfirmButton","timer","Table","size","responsive","colSpan","border","fontWeight","form","xmlns","fill","viewBox","splice","removeFields","d","addFields","HeroScreen","navigate","useNavigate","sethero","dpmedidas","setDpmedidas","find","getBy_id","fecha_creacion","whiteSpace","descripcion","handleReturn","AddDynamicInputFields","MarvelScreen","SearchScreen","useLocation","searchHeroes","setsearchHeroes","search","searchText","toLowerCase","_res$id","includes","getHeroesByName","_res$estado","getByEstado","autoComplete","Navbarr","Navbar","bg","variant","expand","Toggle","stroke","strokeLinecap","strokeLinejoin","strokeWidth","cx","cy","r","Collapse","Brand","href","Nav","handleLogout","signOut","Formulario","datos","setdatos","cargar","handleRegister","post","DatePicker","minDate","rows","Imagen","messages","allDay","previous","next","today","month","week","day","agenda","date","time","event","noEventsInRange","showMore","total","localizer","momentLocalizer","moment","locale","Calendario","modalShow","setModalShow","React","myEventsList","setmyEventsList","modal","setModal","lastView","setLastView","localStorage","getItem","dataa","Calendar","events","titleAccessor","startAccessor","endAccessor","add","format","selectable","eventPropGetter","eventStyleGetter","start","end","isSelected","backgroundColor","borderRadius","opacity","display","color","fontSize","padding","onSelectEvent","onView","setItem","showAllEvents","view","Modal","show","onHide","handleClose","centered","Header","closeButton","Body","DashboardRouter","_Fragment","Routes","Route","path","element","PrivateRouter","isLogged","pathname","Navigate","PublicRouter","lastPath","RegisterScreen","password2","terms","class","trim","validator","isEmail","startRegisterEmailPassword","createUserWithEmailAndPassword","_ref2","updateProfile","AppRouter","isReady","setIsReady","setIsLogged","onAuthStateChanged","BrowserRouter","reducers","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","HeroesApp","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.31e18525.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/3.ee3fe62e.png\";","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        if (target.type === 'checkbox') {\r\n\r\n            setValues({\r\n                ...values,\r\n                [target.name]: target.checked\r\n            });\r\n\r\n        } else {\r\n\r\n            setValues({\r\n                ...values,\r\n                [target.name]: target.value\r\n            });\r\n        }\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n\r\n}","export const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n}","import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport 'firebase/compat/firestore';\r\n\r\n\r\n// Your web app's Firebase configuration\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCSaJzJYoLaAhDK7w55MC4Oz4MVvxjUE4E\",\r\n  authDomain: \"react-auth-app-6a340.firebaseapp.com\",\r\n  projectId: \"react-auth-app-6a340\",\r\n  storageBucket: \"react-auth-app-6a340.appspot.com\",\r\n  messagingSenderId: \"778269297947\",\r\n  appId: \"1:778269297947:web:fe855452be4a5d767257be\",\r\n  measurementId: \"G-960E23P220\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n  db,\r\n  googleAuthProvider,\r\n  firebase\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });\r\n\r\n\r\nexport const setError = (err) => {\r\n    return {\r\n        type: types.uiSetError,\r\n        payload: err\r\n    }\r\n};\r\n\r\nexport const removeError = () => (\r\n    {\r\n        type: types.uiRemoveError,\r\n        payload: null\r\n    });\r\n\r\nexport const startLoading = () => {\r\n    return {\r\n        type: types.uiStartLoading,\r\n    }\r\n}\r\n\r\nexport const finishLoading = () => {\r\n    return {\r\n        type: types.uiFinishLoading,\r\n    }\r\n}","import { types } from \"../types/types\"\r\nimport { firebase, googleAuthProvider } from \"../firebase/firebase-config\";\r\nimport { startLoading, finishLoading } from \"./ui\";\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n\r\n        dispatch( startLoading() )\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then( ({ user }) => {\r\n    \r\n                dispatch( login( user.uid, user.displayName ) );\r\n                dispatch( finishLoading() );\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n                dispatch( finishLoading() );\r\n            })\r\n    }\r\n}\r\n\r\nexport const startRegisterEmailPassword = (email, password, name) => {\r\n    return (dispatch) => {\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then( async ({ user }) =>{\r\n                await user.updateProfile({displayName: name});\r\n                // console.log(user);\r\n                dispatch( login( user.uid, user.displayName ) );\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n            .then( ({ user }) => {\r\n                // const { _delegate } = user\r\n                // console.log( user.uid, user.displayName );\r\n                dispatch( login( user.uid, user.displayName ) );\r\n            })\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => {\r\n    return({\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const startLogout = () => {\r\n    return async(dispatch) => {\r\n        await firebase.auth().signOut();\r\n\r\n        dispatch( logout() );\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n})","import React from 'react'\nimport GoogleButton from 'react-google-button'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport logo from '../../assets/3.png';\nimport './LoginScreen.css';\nimport { useForm } from '../../hooks/useForm'\nimport { startLoginEmailPassword, startGoogleLogin } from '../../actions/auth'\nimport { removeError } from '../../actions/ui';\n\nconst LoginScreen = () => {\n\n\n    const dispatch = useDispatch();\n    const { loading } = useSelector(state => state.ui)\n    const { msgError } = useSelector(state => state.ui);\n\n    const [formValues, handleInputChange] = useForm({\n        email: '',\n        password: '',\n    });\n\n    const { email, password } = formValues;\n\n    const handleGoogleLogin = () => {\n        console.log('Google Login TODO');\n        dispatch(startGoogleLogin());\n        dispatch(removeError())\n    }\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        dispatch(startLoginEmailPassword(email, password));\n        dispatch(removeError())\n    }\n\n    return (\n\n        <body className=\"text-center\">\n            <main className=\"form-signin\">\n                <form onSubmit={handleLogin}>\n                    <img className=\"mb-4 rounded mx-auto d-block\" src={logo} alt=\"\" width=\"290\" height=\"70\" />\n                    <h1 className=\"h3 mb-3 fw-normal\">Iniciar sesion</h1>\n                    {\n                        msgError && (\n                            <div className=\"alert alert-danger\" role=\"alert\">\n                                {msgError}\n                            </div>\n                        )\n                    }\n                    <div className=\"form-floating\">\n                        <input\n                            type=\"email\"\n                            className=\"form-control\"\n                            id=\"floatingInput\"\n                            placeholder=\"name@example.com\"\n                            v-model=\"student.email\"\n                            name=\"email\"\n                            value={email}\n                            onChange={handleInputChange}\n                            required />\n\n                        <label htmlFor=\"floatingInput\">Correo electronico</label>\n                    </div>\n\n                    <div className=\"form-floating\">\n                        <input\n                            type=\"password\"\n                            className=\"form-control\"\n                            id=\"floatingPassword\"\n                            placeholder=\"Password\"\n                            v-model=\"student.password\"\n                            name=\"password\"\n                            value={password}\n                            onChange={handleInputChange}\n                            required />\n                        <label htmlFor=\"floatingPassword\">Password</label>\n                    </div>\n                    {/* <div v-if=\"alerta\" className=\"alert alert-danger\" role=\"alert\">\n                    {{ alerta }}\n                </div> */}\n                    <div className=\"form-group\">\n                        <button className=\"w-100 btn btn-lg btn-primary\" type=\"submit\" disabled={loading}>Entrar</button>\n                    </div>\n                    <div className=\"container mt-3\">\n                        <GoogleButton type='dark' onClick={handleGoogleLogin} />\n                        <hr />\n                        <Link to=\"/register\"> Crear nueva cuenta </Link>\n                    </div>\n                    <p className=\"mt-5 mb-3 text-muted\">&copy; Universidad Tecnologica de Pereira 2021</p>\n                </form>\n            </main>\n        </body>\n    )\n}\nexport default LoginScreen\n","import axios from 'axios';\r\n\r\nexport const Data = async () => {\r\n    let data\r\n    await axios.get('https://desarrollonylon.vercel.app/api/').then((res) => {\r\n\r\n        data = (res.data)\r\n\r\n    })\r\n\r\n    return data\r\n}\r\n\r\n","import axios from 'axios';\r\nimport React from 'react'\r\nimport { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst HeroCard = ({ _id, id, name, maquina, estado, fecha_entrega }) => {\r\n\r\n    const elimina = async (id) => {\r\n        Swal.fire({\r\n            title: 'Estás seguro?',\r\n            text: \"¡No podrás revertir esto!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Si, Borrar!'\r\n        }).then(async (result) => {\r\n            if (result.isConfirmed) {\r\n                await axios.delete(`https://desarrollonylon.vercel.app/api/deldesarrollo/${id}`)\r\n                    .then(res => {\r\n\r\n                    })\r\n                window.location.reload()\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div key={id} className=\" animate__animated animate__fadeIn\">\r\n                <div className=\"card w-100\" >\r\n                    <div className=\"col-8 align-self-center d-flex justify-content-center\">\r\n                        <Link to={`/img/${id}`} className='align-self-center d-flex justify-content-center' >\r\n                            <img loading=\"lazy\" src={`/assets/${id}.jpg`} style={{ height: '150px', width: \"100px\" }} className=\"card-img-top m-1\" alt={id} />\r\n                        </Link>\r\n                        <Link to={`/img/${id}1`} className='align-self-center d-flex justify-content-center' >\r\n                            <img loading=\"lazy\" src={`/assets/${id}1.jpg`} style={{ height: '150px', width: \"100px\" }} className=\"card-img-top m-1\" alt={`${id}1`} />\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <h3 className=\"card-title\">{id}</h3>\r\n\r\n                        <ul className=\"list-group list-group-flush\">\r\n                            <li className=\"list-group-item\"> {name} </li>\r\n                            <li className=\"list-group-item\"> {maquina} </li>\r\n                            <li className=\"list-group-item\"> {estado} </li>\r\n                            <li className=\"list-group-item\"> {new Date(fecha_entrega).toLocaleDateString()} </li>\r\n                        </ul>\r\n\r\n                    </div>\r\n                    <div className=\"card-footer d-flex justify-content-between\">\r\n                        <div>\r\n                            <Link to={`/dp/${_id}`}>\r\n                                Ver más ...\r\n                            </Link>\r\n                        </div>\r\n                        <div>\r\n                            <Link to={`/income/edit/${_id}`}>\r\n                                Editar\r\n                            </Link>\r\n                        </div>\r\n                        <div>\r\n                            <a type='button' className='link-primary' onClick={elimina.bind(this, _id)}>\r\n                                Eliminar\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        </div >\r\n    )\r\n}\r\nexport default HeroCard\r\n","import React, { useEffect, useMemo, useState } from 'react'\r\nimport { GetHeroesByPublisher } from '../../selectors/getHeroesByPublisher'\r\nimport HeroCard from './HeroCard';\r\nimport { Data1 } from '../../selectors/get';\r\n// import { heroes } from '../../data/heroes';\r\n\r\n\r\n\r\nconst HeroList = ({ publisher }) => {\r\n\r\n    const [heroes, setData] = useState(0)\r\n\r\n    useEffect(() => {\r\n        data()\r\n    }, [])\r\n\r\n\r\n\r\n    const data = async () => {\r\n        await GetHeroesByPublisher(publisher).then((res) => {\r\n            // console.log(res.short((a, b) => a.fecha_entrega - b.fecha_entrega))\r\n            console.log(res)\r\n            setData(res)\r\n        })\r\n    }\r\n    // console.log(heroes.short((a, b) => a.arrivalDate - b.arrivalDate))\r\n    // const heroes = useMemo(() => datas, [publisher]);\r\n\r\n    console.log(heroes, \"heroes\")\r\n\r\n\r\n    if (!heroes) return null\r\n\r\n\r\n    return (\r\n        <div className=\"row row-cols-1 row-cols-md-3 row-cols-lg-4 g-4 animate__animated animate__fadeIn\">\r\n            {\r\n                heroes.map(hero => {\r\n                    return (\r\n                        <HeroCard key={hero.id} {...hero} />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeroList\r\n","import { Data } from \"../data/heroes\";\r\n\r\nexport const GetHeroesByPublisher = async publisher => {\r\n    const data = Data()\r\n    console.log(data)\r\n    return await data.then((res) => res.filter(hero => hero.publisher === publisher))\r\n}","import React from 'react'\r\nimport HeroList from '../hero/HeroList';\r\n\r\n\r\nconst DcScreen = () => {\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"animate__animated animate__fadeInRight\">Seamless</h1>\r\n\r\n            <hr />\r\n\r\n            <HeroList publisher='Seamless' />\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DcScreen\r\n","import { useEffect, useState } from \"react\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport { Table } from 'react-bootstrap';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst AddInputFields = ({ crudo, tit_tabla, id }) => {\r\n\r\n  const params = useParams()\r\n\r\n  const [talla, setTalla] = useState([\r\n    {\r\n      uno: '',\r\n      dos: '',\r\n      tres: '',\r\n      cuatro: ''\r\n    }]\r\n  )\r\n\r\n  const [formValues, setformValues] = useState(\r\n    [{\r\n      detalle: '',\r\n      cetme: '',\r\n      plano: \"\",\r\n      cetme1: '',\r\n      plano1: \"\",\r\n      cetme2: '',\r\n      plano2: \"\",\r\n      cetme3: '',\r\n      plano3: \"\",\r\n    }]\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (crudo) {\r\n      setformValues(crudo)\r\n    }\r\n    if (tit_tabla != \"\") {\r\n      setTalla(tit_tabla)\r\n    } else {\r\n      setTalla([{\r\n        uno: 'S',\r\n        dos: 'M',\r\n        tres: \"L\",\r\n        cuatro: 'XL',\r\n      }])\r\n    }\r\n\r\n  }, [params.id])\r\n\r\n  const InputChange = (e) => {\r\n    const list = [...talla];\r\n    list[0][e.target.name] = e.target.value;\r\n    setTalla(list);\r\n    console.log(list)\r\n  };\r\n\r\n  const handleInputChange = (e, index) => {\r\n    const list = [...formValues];\r\n    list[index][e.target.name] = e.target.value;\r\n    setformValues(list);\r\n  };\r\n\r\n  const update = async (e) => {\r\n    e.preventDefault();\r\n    await axios.put(`https://desarrollonylon.vercel.app/api/update-desarrollo/${params.id}`, { tit_tabla: talla, crudo: formValues })\r\n      .then(res => {\r\n        console.log(res);\r\n        console.log(res.data);\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Actualizado',\r\n          showConfirmButton: false,\r\n          timer: 1200\r\n        })\r\n\r\n      })\r\n  }\r\n\r\n  const addFields = () => {\r\n    setformValues([...formValues, {\r\n      detalle: '',\r\n      cetme: '',\r\n      plano: \"\",\r\n      cetme1: '',\r\n      plano1: \"\",\r\n      cetme2: '',\r\n      plano2: \"\",\r\n      cetme3: '',\r\n      plano3: \"\",\r\n    }])\r\n\r\n  }\r\n\r\n  const removeFields = (index) => {\r\n    let data = [...formValues];\r\n    data.splice(index, 1)\r\n    setformValues(data)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={update}>\r\n        <Table className=\"table\" size=\"sm\" responsive=\"sm\">\r\n          {talla.map((talla) => (\r\n            <thead className=\"text-center\" >\r\n              <tr>\r\n                <th></th>\r\n                <th colSpan=\"2\" >\r\n                  <input\r\n                    className=\"form-control form-control-sm text-center p-0 m-0 \"\r\n                    name='uno'\r\n                    onChange={e => InputChange(e)}\r\n                    value={talla.uno}\r\n                    style={{ border: \"0\", fontWeight: \"bold\" }}\r\n                  />\r\n                </th>\r\n                <th colSpan=\"2\">\r\n                  <input\r\n                    className=\"form-control form-control-sm text-center p-0 m-0 \"\r\n                    name='dos'\r\n                    onChange={e => InputChange(e)}\r\n                    value={talla.dos}\r\n                    style={{ border: \"0\", fontWeight: \"bold\" }}\r\n                  />\r\n                </th>\r\n                <th colSpan=\"2\">\r\n                  <input\r\n                    className=\"form-control form-control-sm text-center p-0 m-0 \"\r\n                    name='tres'\r\n                    onChange={e => InputChange(e)}\r\n                    value={talla.tres}\r\n                    style={{ border: \"0\", fontWeight: \"bold\" }}\r\n                  />\r\n                </th>\r\n                <th colSpan=\"2\">\r\n                  <input\r\n                    className=\"form-control form-control-sm text-center p-0 m-0\"\r\n                    name='cuatro'\r\n                    onChange={e => InputChange(e)}\r\n                    value={talla.cuatro}\r\n                    style={{ border: \"0\", fontWeight: \"bold\" }}\r\n                  />\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n          ))}\r\n          <thead className=\"text-center p-0 m-0\">\r\n            <tr>\r\n              <th>Descripcion</th>\r\n              <th>Cetme</th>\r\n              <th>plano</th>\r\n              <th>Cetme</th>\r\n              <th>plano</th>\r\n              <th>Cetme</th>\r\n              <th>plano</th>\r\n              <th>Cetme</th>\r\n              <th>plano</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {formValues.map((form, index) => (\r\n              <tr key={index} >\r\n                <td >\r\n                  <input\r\n                    className=\"form-control form-control-sm \"\r\n                    name='detalle'\r\n                    onChange={e => handleInputChange(e, index)}\r\n                    value={form.detalle}\r\n                    style={{ border: \"0\" }}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    className=\"form-control form-control-sm text-center\"\r\n                    name='cetme'\r\n                    onChange={e => handleInputChange(e, index)}\r\n                    value={form.cetme}\r\n                    style={{ border: \"0\" }}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    className=\"form-control form-control-sm text-center\"\r\n                    name='plano'\r\n                    onChange={e => handleInputChange(e, index)}\r\n                    value={form.plano}\r\n                    style={{ border: \"0\" }}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    className=\"form-control form-control-sm text-center\"\r\n                    name='cetme1'\r\n                    onChange={e => handleInputChange(e, index)}\r\n                    value={form.cetme1}\r\n                    style={{ border: \"0\" }}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    className=\"form-control form-control-sm text-center\"\r\n                    name='plano1'\r\n                    onChange={e => handleInputChange(e, index)}\r\n                    value={form.plano1}\r\n                    style={{ border: \"0\" }}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    className=\"form-control form-control-sm text-center\"\r\n                    name='cetme2'\r\n                    onChange={e => handleInputChange(e, index)}\r\n                    value={form.cetme2}\r\n                    style={{ border: \"0\" }}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    className=\"form-control form-control-sm text-center\"\r\n                    name='plano2'\r\n                    onChange={e => handleInputChange(e, index)}\r\n                    value={form.plano2}\r\n                    style={{ border: \"0\" }}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    className=\"form-control form-control-sm text-center\"\r\n                    name='cetme3'\r\n                    onChange={e => handleInputChange(e, index)}\r\n                    value={form.cetme3}\r\n                    style={{ border: \"0\" }}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    className=\"form-control form-control-sm text-center\"\r\n                    name='plano3'\r\n                    onChange={e => handleInputChange(e, index)}\r\n                    value={form.plano3}\r\n                    style={{ border: \"0\" }}\r\n                  />\r\n                </td>\r\n                <svg className='icon bi bi-trash3' xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\" onClick={() => removeFields(index)}>\r\n\r\n                  <path d=\"M6.5 1h3a.5.5 0 0 1 .5.5v1H6v-1a.5.5 0 0 1 .5-.5ZM11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3A1.5 1.5 0 0 0 5 1.5v1H2.506a.58.58 0 0 0-.01 0H1.5a.5.5 0 0 0 0 1h.538l.853 10.66A2 2 0 0 0 4.885 16h6.23a2 2 0 0 0 1.994-1.84l.853-10.66h.538a.5.5 0 0 0 0-1h-.995a.59.59 0 0 0-.01 0H11Zm1.958 1-.846 10.58a1 1 0 0 1-.997.92h-6.23a1 1 0 0 1-.997-.92L3.042 3.5h9.916Zm-7.487 1a.5.5 0 0 1 .528.47l.5 8.5a.5.5 0 0 1-.998.06L5 5.03a.5.5 0 0 1 .47-.53Zm5.058 0a.5.5 0 0 1 .47.53l-.5 8.5a.5.5 0 1 1-.998-.06l.5-8.5a.5.5 0 0 1 .528-.47ZM8 4.5a.5.5 0 0 1 .5.5v8.5a.5.5 0 0 1-1 0V5a.5.5 0 0 1 .5-.5Z\" />\r\n                </svg>\r\n                {/* <button onClick={() => removeFields(index)}>Remove</button> */}\r\n\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </form>\r\n      <button onClick={addFields}>Add More...</button>\r\n      <button onClick={update}>Save</button>\r\n      {/* <button onClick={() => removeFields(index)}>Delete</button> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddInputFields;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { useParams, Navigate, useNavigate, Link } from 'react-router-dom'\r\nimport { getBy_id } from '../../selectors/getBy_id';\r\nimport React, { useEffect, useMemo, useState } from 'react'\r\nimport AddDynamicInputFields from '../addfield/AddInputFields';\r\n\r\n\r\nconst HeroScreen = () => {\r\n\r\n    const { id } = useParams();\r\n    const navigate = useNavigate()\r\n    const [hero, sethero] = useState()\r\n    const [dpmedidas, setDpmedidas] = useState()\r\n\r\n    // let { id, name, , fecha_creacion, fecha_entrega, descripcion } = hero;\r\n\r\n    useEffect(() => {\r\n        data()\r\n    }, [])\r\n\r\n    const data = async () => {\r\n        await getBy_id(id).then((res) => {\r\n            sethero(res)\r\n            console.log(res)\r\n        })\r\n        // await Datamedida().then((res) => setDpmedidas(res.find(res => res.id === id)))\r\n\r\n    }\r\n\r\n    if (!hero) return null\r\n\r\n    const handleReturn = () => {\r\n        navigate(-1);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1> {hero.id} </h1>\r\n            <hr />\r\n            <div className='row'>\r\n                <div key={hero.id} className=\"col-sm-4 \">\r\n                    <div className=\"card h-100\">\r\n                        <div className=\"col-7 align-self-center d-flex justify-content-center\">\r\n                            {/* <img src={`/assets/${hero.id}.jpg`} style={{ maxHeight: '180px', objectFit: 'scale-down' }} className=\"card-img-top m-1\" alt={`${hero.id}1`} /> */}\r\n                            {/* <img src={`/assets/${hero.id}1.jpg`} style={{ maxHeight: '180px', objectFit: 'scale-down' }} className=\"card-img-top m-1\" alt={`${hero.id}1`} /> */}\r\n                            <Link to={`/img/${hero.id}`} className='align-self-center d-flex justify-content-center' >\r\n                                <img loading=\"lazy\" src={`/assets/${hero.id}.jpg`} style={{ height: '210px', width: \"120px\" }} className=\"card-img-top m-1\" alt={hero.id} />\r\n                            </Link>\r\n                            <Link to={`/img/${hero.id}1`} className='align-self-center d-flex justify-content-center' >\r\n                                <img loading=\"lazy\" src={`/assets/${hero.id}1.jpg`} style={{ height: '210px', width: \"120px\" }} className=\"card-img-top m-1\" alt={`${hero.id}1`} />\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            {/* <h3 className=\"card-title\">{id}</h3> */}\r\n\r\n                            <ul className=\"list-group list-group-flush\">\r\n                                <li className=\"list-group-item\"> <b> Descripción: </b> {hero.name} </li>\r\n                                <li className=\"list-group-item\"><b> Tipo: </b> {hero.publisher} </li>\r\n                                <li className=\"list-group-item\"><b> talla: </b> {hero.talla} </li>\r\n                                <li className=\"list-group-item\"> <b>Maquina: </b> {hero.maquina} </li>\r\n                                <li className=\"list-group-item\"> <b> fecha de creacion: </b> {new Date(hero.fecha_creacion).toLocaleDateString()} </li>\r\n                                <li className=\"list-group-item\"> <b> fecha de entrega: </b> {new Date(hero.fecha_entrega).toLocaleDateString()} </li>\r\n                                <li className=\"list-group-item px-3\" style={{ whiteSpace: \"pre-wrap\" }}><b>Observacion:</b><br />{hero.descripcion} </li>\r\n                            </ul>\r\n\r\n                        </div>\r\n                        <div className=\"card-footer text-end\">\r\n                            <button\r\n                                className=\"btn btn-primary\"\r\n                                onClick={handleReturn}\r\n                            >\r\n                                Regresar\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='col-sm-8'>\r\n                    {/* <Table striped hover size=\"sm\" responsive=\"sm\">\r\n                        <thead >\r\n                            <tr>\r\n                                <th>Descripcion</th>\r\n                                <th>Cetme</th>\r\n                                <th>plano</th>\r\n                                <th>Cetme</th>\r\n                                <th>plano</th>\r\n                                <th>Cetme</th>\r\n                                <th>plano</th>\r\n                                <th>Cetme</th>\r\n                                <th>plano</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr> */}\r\n                    <AddDynamicInputFields {...hero} />\r\n                    {/* </tr>\r\n\r\n                        </tbody>\r\n                    </Table> */}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeroScreen\r\n","import { Data } from \"../data/heroes\";\r\n\r\nexport const getBy_id = async _id => {\r\n    const data = Data()\r\n    return await data.then((res) => res.find(hero => hero._id === _id))\r\n}","import React from 'react'\r\nimport HeroList from '../hero/HeroList';\r\n\r\n\r\nconst MarvelScreen = () => {\r\n\r\n    return (\r\n        <div >\r\n            <h1 className='animate__animated animate__fadeInRight'>Body</h1>\r\n\r\n            <hr />\r\n\r\n\r\n            <HeroList publisher='Body' />\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MarvelScreen\r\n","import React, { useEffect, useMemo, useState } from 'react'\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport queryString from 'query-string'\r\nimport { getHeroesByName } from '../../selectors/getHeroesByName';\r\nimport HeroCard from '../hero/HeroCard';\r\nimport { getByEstado } from '../../selectors/getByEstado';\r\n\r\nconst SearchScreen = () => {\r\n\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const [searchHeroes, setsearchHeroes] = useState()\r\n\r\n    useEffect(() => {\r\n        search()\r\n    }, [])\r\n\r\n    // const { q = '' } = queryString.parse(location.search);\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        searchText: \"\"\r\n    });\r\n\r\n    const { searchText } = formValues;\r\n\r\n    const search = async (e) => {\r\n        await getHeroesByName(e).then((res) => {\r\n            setsearchHeroes(res)\r\n            console.log(res)\r\n        }) || getByEstado(e).then((res) => {\r\n            setsearchHeroes(res)\r\n            console.log(res)\r\n        })\r\n    }\r\n    // const searchHeroes = useMemo(() => getHeroesByName(q), [q]);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // navigate(`?q=${searchText}`)\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        handleInputChange(e)\r\n        // navigate(`?q=${searchText}`)\r\n        search(e.target.value)\r\n    }\r\n\r\n\r\n    if (!searchHeroes) return null\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Search Screen</h1>\r\n            <hr />\r\n            <div className=\"row\">\r\n                <div className=\"col-5\">\r\n                    <h3>\r\n                        Búsqueda de DP's\r\n                    </h3>\r\n\r\n                    <form onSubmit={handleSubmit} >\r\n\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Ingrese el nombre del DP\"\r\n                            className=\"form-control mt-4\"\r\n                            name=\"searchText\"\r\n                            autoComplete=\"off\"\r\n                            value={searchText}\r\n                            onChange={handleChange}\r\n                        />\r\n\r\n                        <button\r\n                            className=\"btn btn-primary mt-3\"\r\n                            type=\"submit\">\r\n                            Buscar\r\n                        </button>\r\n\r\n                    </form>\r\n                </div>\r\n                <div className=\"col-7\">\r\n                    <h3>\r\n                        Resultados\r\n                    </h3>\r\n                    <hr />\r\n                    {\r\n                        searchHeroes.map(hero => <div className='p-1 col-8'><HeroCard key={hero.id} {...hero} /> </div>)\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchScreen\r\n","import { Data } from \"../data/heroes\";\r\n\r\nexport const getHeroesByName = async (name = '') => {\r\n    const data = Data()\r\n\r\n    if (name.length === 0) {\r\n        return [];\r\n    }\r\n\r\n    name = name.toLowerCase()\r\n    console.log(name)\r\n    return await data.then((res) => res.filter(res => res.id?.toLowerCase().includes(name)))\r\n}","import { Data } from \"../data/heroes\";\r\n\r\nexport const getByEstado = async (estado = '') => {\r\n    const data = Data()\r\n\r\n    if (estado.length === 0) {\r\n        return [];\r\n    }\r\n\r\n    estado = estado.toLowerCase()\r\n    console.log(estado)\r\n    return await data.then((res) => res.filter(res => res.estado?.toLowerCase().includes(estado)))\r\n}","import React from 'react'\r\nimport './navbar.css';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nconst Navbarr = () => {\r\n    const dispatch = useDispatch()\r\n    const { name } = useSelector(state => state.auth)\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" className='justify-content-center'>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className='justify-content-center'>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" className=\"d-block mx-auto\" role=\"img\" viewBox=\"0 0 24 24\"><title>Product</title><circle cx=\"12\" cy=\"12\" r=\"10\" /><path d=\"M14.31 8l5.74 9.94M9.69 8h11.48M7.38 12l5.74-9.94M9.69 16L3.95 6.06M14.31 16H2.83m13.79-4l-5.74 9.94\" /></svg>\r\n            </Navbar.Toggle >\r\n            <Navbar.Collapse id=\"basic-navbar-nav\" className='text-center' >\r\n                <Navbar.Brand className=\"mx-2 px-2 \" href=\"/\">{name}</Navbar.Brand>\r\n                <Nav className=\"mx-auto justify-content-center\">\r\n                    <Nav.Link href=\"/seamless\">Seamless</Nav.Link>\r\n                    <Nav.Link href=\"/body\">Body</Nav.Link>\r\n                    <Nav.Link href=\"/search\">Search</Nav.Link>\r\n                    <Nav.Link href=\"/income\">Income</Nav.Link>\r\n                    <Nav.Link href=\"/agend\">Agend</Nav.Link>\r\n                </Nav>\r\n                <Navbar.Brand className=\"mx-2 px-2 btn\" onClick={handleLogout}>Salir</Navbar.Brand>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default Navbarr\r\n","import React, { useState } from 'react'\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport DatePicker from 'react-date-picker';\r\nimport 'react-date-picker/dist/DatePicker.css';\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\n\r\n\r\nconst Formulario = () => {\r\n\r\n\r\n    const navigate = useNavigate()\r\n    const params = useParams()\r\n    const [datos, setdatos] = useState(0)\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(params.id)\r\n        if (params.id != null) {\r\n            axios.get('https://desarrollonylon.vercel.app/api').then((res) => {\r\n                // axios.get('http://localhost:4002/api').then((res) => {\r\n                console.log(\"entra\")\r\n                console.log(res.data.find((datos) => datos._id === params.id))\r\n                cargar(res.data.find((datos) => datos._id === params.id))\r\n\r\n            })\r\n        }\r\n    }, [params.id])\r\n\r\n\r\n    // const calendar = () => {\r\n    //   return  <Calendar onChange={onChange} value={value} />\r\n    // }\r\n\r\n\r\n    const [formValues, handleInputChange, reset] = useForm({\r\n        name: \"\",\r\n        id: \"\",\r\n        name: \"\",\r\n        publisher: \"\",\r\n        maquina: \"\",\r\n        fecha_entrega: new Date(),\r\n        fecha_creacion: new Date(),\r\n        estado: \"\",\r\n        descripcion: \"\",\r\n        talla: \"\"\r\n    });\r\n\r\n    const { id, name, publisher, maquina, fecha_entrega, fecha_creacion, estado, descripcion, talla } = formValues;\r\n\r\n    const cargar = (datos) => {\r\n        formValues.id = datos.id\r\n        formValues.name = datos.name\r\n        formValues.publisher = datos.publisher\r\n        formValues.maquina = datos.maquina\r\n        formValues.fecha_entrega = new Date(datos.fecha_entrega)\r\n        formValues.fecha_creacion = new Date(datos.fecha_creacion)\r\n        formValues.estado = datos.estado\r\n        formValues.descripcion = datos.descripcion\r\n        setdatos(datos)\r\n    }\r\n\r\n    const inputstar = (e) => {\r\n        formValues.fecha_creacion = e\r\n        setdatos(+1)\r\n    }\r\n\r\n    const inputend = (e) => {\r\n        formValues.fecha_entrega = e\r\n        setdatos(+2)\r\n    }\r\n\r\n    const update = async (e) => {\r\n        e.preventDefault();\r\n        await axios.put(`https://desarrollonylon.vercel.app/api/update-desarrollo/${params.id}`, formValues)\r\n            .then(res => {\r\n                console.log(res);\r\n                console.log(res.data);\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Actualizado',\r\n                    showConfirmButton: false,\r\n                    timer: 1200\r\n                })\r\n                handleReturn()\r\n            })\r\n    }\r\n\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        console.log(formValues)\r\n        axios.post(`https://desarrollonylon.vercel.app/api/regdesarrollo`, formValues)\r\n            // axios.post(`http://localhost:4002/api/regdesarrollo`, formValues)\r\n            // axios.post(`http:///regdesarrollo`, formValues)\r\n            // axios.post(`https://bakend.vercel.app/api/regneedle`, formValues)\r\n            .then(res => {\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'correcto',\r\n                    showConfirmButton: false,\r\n                    timer: 1200\r\n                })\r\n                reset();\r\n                // navigate(\"/needlelist\")\r\n            })\r\n    }\r\n\r\n    const handleReturn = () => {\r\n        navigate(-1)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"col-sm-7 mx-auto\">\r\n                <form onSubmit={handleRegister}>\r\n                    <div className=\"card h-100\">\r\n                        <div className=\"col-3 align-self-center\">\r\n                            <img src={`/assets/photo.jpg`} className=\"card-img-top m-1\" alt={\"id\"} />\r\n                        </div>\r\n\r\n                        <div className=\"card-body\">\r\n                            {/* <h3 className=\"card-title\">{id}</h3> */}\r\n\r\n                            <ul className=\"list-group list-group-flush\">\r\n                                <li className=\"list-group-item d-flex justify-content-between\">\r\n                                    <label className='col-sm-3' htmlFor=\"id\"><b> Nombre: </b></label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control form-control-sm\"\r\n                                        id=\"id\"\r\n                                        name=\"id\"\r\n                                        value={id}\r\n                                        onChange={handleInputChange}\r\n                                        required={true}\r\n                                        autoComplete=\"on\"\r\n                                    /> </li>\r\n                                <li className=\"list-group-item d-flex justify-content-between\">\r\n                                    <label className='col-3' htmlFor=\"name\"><b> Descripciòn: </b></label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control form-control-sm \"\r\n                                        id=\"name\"\r\n                                        name=\"name\"\r\n                                        value={name}\r\n                                        onChange={handleInputChange}\r\n                                        required={true}\r\n                                        autoComplete=\"on\"\r\n                                    /> </li>\r\n                                <li className=\"list-group-item d-flex justify-content-between\">\r\n                                    <label className='col-3' htmlFor=\"publisher\"><b> Tipo: </b></label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control form-control-sm \"\r\n                                        id=\"publisher\"\r\n                                        name=\"publisher\"\r\n                                        value={publisher}\r\n                                        onChange={handleInputChange}\r\n                                        required={true}\r\n                                        autoComplete=\"on\"\r\n                                    /> </li>\r\n                                <li className=\"list-group-item d-flex justify-content-between\">\r\n                                    <label className='col-3' htmlFor=\"publisher\"><b> Tallas: </b></label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control form-control-sm \"\r\n                                        id=\"talla\"\r\n                                        name=\"talla\"\r\n                                        value={talla}\r\n                                        onChange={handleInputChange}\r\n                                        required={true}\r\n                                        autoComplete=\"on\"\r\n                                    /> </li>\r\n                                <li className=\"list-group-item d-flex justify-content-between\">\r\n                                    <label className='col-3' htmlFor=\"maquina\"><b> Maquina: </b></label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control form-control-sm \"\r\n                                        id=\"maquina\"\r\n                                        name=\"maquina\"\r\n                                        value={maquina}\r\n                                        onChange={handleInputChange}\r\n                                        required={true}\r\n                                        autoComplete=\"on\"\r\n                                    /> </li>\r\n                                <li className=\"list-group-item d-flex \">\r\n                                    <label className='col-3' htmlFor=\"fecha_creacion\"><b> fecha: </b></label>\r\n                                    <DatePicker\r\n                                        // type=\"date\"\r\n                                        onChange={inputstar}\r\n                                        value={fecha_creacion}\r\n                                        id=\"fecha_creacion\"\r\n                                        name=\"fecha_creacion\"\r\n                                        required={true}\r\n                                    />\r\n                                </li>\r\n                                <li className=\"list-group-item d-flex \">\r\n                                    <label className='col-3' htmlFor=\"fecha_entrega\"><b> Fecha de entrega: </b></label>\r\n                                    <DatePicker\r\n                                        // type=\"date\"\r\n\r\n                                        onChange={inputend}\r\n                                        value={fecha_entrega}\r\n                                        id=\"fecha_entrega\"\r\n                                        name=\"fecha_entrega\"\r\n                                        required={true}\r\n                                        minDate={fecha_creacion}\r\n\r\n                                    />\r\n                                    {/* <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control form-control-sm \"\r\n                                        id=\"fecha_entrega\"\r\n                                        name=\"fecha_entrega\"\r\n                                        value={fecha_entrega}\r\n                                        onChange={handleInputChange}\r\n                                        required={true}\r\n                                        autoComplete=\"on\"\r\n                                    /> */}\r\n                                </li>\r\n                                <li className=\"list-group-item d-flex justify-content-between\">\r\n                                    <label className='col-3' htmlFor=\"estado\"><b> Estado: </b></label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control form-control-sm \"\r\n                                        id=\"estado\"\r\n                                        name=\"estado\"\r\n                                        value={estado}\r\n                                        onChange={handleInputChange}\r\n                                        required={true}\r\n                                        autoComplete=\"on\"\r\n                                    /> </li>\r\n                                <li className=\"list-group-item d-flex justify-content-between\">\r\n                                    <label className='col-3' htmlFor=\"descripcion\"><b> Observaciòn: </b></label>\r\n                                    <textarea\r\n                                        type=\"text\"\r\n                                        className=\"form-control form-control-sm\"\r\n                                        rows={7}\r\n                                        id=\"descripcion\"\r\n                                        name=\"descripcion\"\r\n                                        value={descripcion}\r\n                                        onChange={handleInputChange}\r\n                                        required={false}\r\n                                        autoComplete=\"on\"\r\n                                    /> </li>\r\n                            </ul>\r\n\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </form >\r\n                <div className=\"card-footer text-center\">\r\n                    <button\r\n                        className=\"btn btn-primary mx-2\"\r\n                        onClick={handleReturn}\r\n                    >\r\n                        Regresar\r\n                    </button>\r\n                    <button\r\n                        className=\"btn btn-primary mx-2\"\r\n                        type=\"submit\"\r\n                        onClick={handleRegister}\r\n                    >\r\n                        Ingresar\r\n                    </button>\r\n                    {params.id ? <button\r\n                        className=\"btn btn-primary mx-2\"\r\n                        onClick={update}\r\n                    >\r\n                        Actualizar\r\n                    </button> : ''}\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Formulario","import React, { useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\n\r\nconst Imagen = () => {\r\n    const params = useParams()\r\n    const navigate = useNavigate()\r\n    console.log(params.id)\r\n\r\n    const handleReturn = () => {\r\n        navigate(-1);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <img onClick={handleReturn} src={`/assets/${params.id}.jpg`} className=\"card-img-top m-1  col animate__animated animate__fadeIn\" alt={params.id} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Imagen","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import React, { useEffect, useState } from 'react'\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { Data } from \"../../data/heroes\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { Button } from 'react-bootstrap';\r\nimport HeroCard from '../hero/HeroCard';\r\nimport HeroList from '../hero/HeroList';\r\n\r\nconst localizer = momentLocalizer(moment)\r\nmoment.locale('es');\r\n\r\n\r\nconst Calendario = () => {\r\n    const data = Data()\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const handleClose = () => setModalShow(false);\r\n    const [myEventsList, setmyEventsList] = useState([])\r\n    const [modal, setModal] = useState([])\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n\r\n\r\n    const dataa = async () => {\r\n        await data.then((res) => {\r\n            setmyEventsList(res)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        dataa()\r\n    }, [])\r\n\r\n\r\n\r\n    // const dispatch = useDispatch();\r\n    const { uid } = useSelector(state => state.auth);\r\n\r\n    // const onDoubleClick = (e) => {\r\n    //     // console.log(e);\r\n    //     dispatch(uiOpenModal());\r\n    // }\r\n\r\n    const onSelectEvent = (e) => {\r\n        setModal(e)\r\n        console.log(e)\r\n        setModalShow(true)\r\n\r\n        // dispatch(eventSetActive(e));\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    // const onSelectSlot = (e) => {\r\n    //     // console.log(e)\r\n    //     dispatch(eventClearActiveEvent());\r\n    // }\r\n\r\n\r\n    const eventStyleGetter = (myEventsList, start, end, isSelected) => {\r\n        const style = {\r\n            backgroundColor: (\"Entregado\" === myEventsList.estado) ? '#90ee90' : '#367CF7',\r\n            borderRadius: '15px',\r\n            opacity: 0.7,\r\n            display: 'block',\r\n            color: 'white',\r\n            height: 21,\r\n            fontSize: 15,\r\n            // textAlign: \"center\"\r\n            padding: \"0px 15px\"\r\n        }\r\n        return {\r\n            style\r\n        }\r\n    };\r\n\r\n    if (!myEventsList) return null\r\n\r\n    return (\r\n        <div>\r\n            <Calendar\r\n\r\n                localizer={localizer}\r\n                events={myEventsList}\r\n                titleAccessor=\"id\"\r\n                startAccessor=\"fecha_entrega\"\r\n                endAccessor={(myEventsList) => { return moment(myEventsList.fecha_entrega).add(1, 'h').format() }}\r\n                messages={messages}\r\n                style={{ height: 550 }}\r\n                selectable={true}\r\n                eventPropGetter={eventStyleGetter}\r\n                // onDoubleClickEvent={() => setModalShow(true)}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                // onSelectSlot={onSelectSlot}\r\n                showAllEvents={true}\r\n                view={lastView}\r\n            />\r\n\r\n            <div >\r\n                <Modal\r\n                    show={modalShow}\r\n                    onHide={handleClose}\r\n                    // size=\"sm\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        {/* <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            {Modal.tipo}\r\n                        </Modal.Title> */}\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <HeroCard key={modal.id}{...modal} />\r\n                    </Modal.Body>\r\n\r\n                    {/* <Modal.Footer>\r\n                        <Button onClick={handleClose}>Close</Button>\r\n                    </Modal.Footer> */}\r\n                </Modal>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Calendario","import React from 'react'\r\nimport { Routes, Route } from 'react-router-dom'\r\nimport DcScreen from '../components/dc/DcScreen'\r\nimport HeroScreen from '../components/hero/HeroScreen'\r\nimport MarvelScreen from '../components/marvel/MarvelScreen'\r\nimport SearchScreen from '../components/search/SearchScreen'\r\nimport Navbar from '../components/ui/Navbar'\r\nimport Formulario from '../components/fomulario/Formulario'\r\nimport Imagen from '../components/imagen/Imagen'\r\nimport Calendario from '../components/calendario/Calendario'\r\n\r\n\r\nconst DashboardRouter = () => {\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className=\"mx-3 my-4\">\r\n                <Routes>\r\n                    <Route path=\"/\" element={<MarvelScreen />} />\r\n                    <Route path=\"/seamless\" element={<DcScreen />} />\r\n                    <Route path=\"/body\" element={<MarvelScreen />} />\r\n                    <Route path=\"/search\" element={<SearchScreen />} />\r\n                    <Route path=\"/income\" element={< Formulario />} />\r\n                    <Route path=\"/agend\" element={< Calendario />} />\r\n\r\n                    <Route path=\"/dp/:id\" element={<HeroScreen />} />\r\n                    <Route path=\"/img/:id\" element={<Imagen />} />\r\n                    <Route path=\"/income/edit/:id\" element={<Formulario />} />\r\n                </Routes>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DashboardRouter\r\n","import React from 'react'\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\n\r\nconst PrivateRouter = ({ children, isLogged }) => {\r\n\r\n    const { pathname, search } = useLocation();\r\n\r\n    console.log('isLogged',isLogged);\r\n\r\n    localStorage.setItem('lastPath', pathname + search );\r\n    \r\n    return isLogged\r\n        ? children\r\n        : <Navigate to=\"/login\" />\r\n}\r\n\r\nexport default PrivateRouter\r\n","import React from 'react'\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst PublicRouter = ({ children, isLogged, lastPath }) => {\r\n\r\n    return !isLogged\r\n        ? children\r\n        : <Navigate to={ lastPath } />\r\n}\r\n\r\nexport default PublicRouter\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport validator from 'validator';\nimport { startRegisterEmailPassword } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\nimport { setError, removeError } from '../../actions/ui';\n\n\nconst RegisterScreen = () => {\n\n    const dispatch = useDispatch();\n    const { msgError } = useSelector(state => state.ui);\n    const [formValues, handleInputChange] = useForm({\n        name: '',\n        email: '',\n        password: '',\n        password2: '',\n        terms: true\n    });\n    const { name, email, password, password2, terms } = formValues;\n\n    const isFormValid = () => {\n\n        if (name.trim().length < 2) {\n            // console.log('nombre requerido');\n            dispatch(setError('Nombre Requerido'));\n            return false;\n        } else if (password.length < 6 || password !== password2) {\n            // console.log('Longitud mínima de 6 caracteres y ser iguales')\n            dispatch(setError('Longitud mínima de 6 caracteres y ser iguales'));\n            return false;\n        } else if (!terms) {\n            dispatch(setError('Marque la casilla para continuar'));\n            return false;\n        } else if (!validator.isEmail(email)) {\n            dispatch(setError('Email Erroneo'));\n            return false;\n        }\n        dispatch(removeError());\n        return true;\n    }\n\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n        if (isFormValid()) {\n            dispatch(startRegisterEmailPassword(email, password, name));\n        }\n    }\n\n\n    return (\n        <div class=\"row justify-content-center\">\n            <div class=\"col-md-5 padding:5px\">\n                <h3 class=\"text-center\">Crear Usuario</h3>\n                <form onSubmit={handleRegister}>\n                    {\n                        msgError && (\n                            <div className=\"alert alert-danger\" role=\"alert\">\n                                {msgError}\n                            </div>\n                        )\n                    }\n\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Nombre Completo</label>\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"exampleInputname\"\n                            name=\"name\"\n                            value={name}\n                            onChange={handleInputChange}\n                            required\n                        />\n                    </div>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Correo electronico</label>\n                        <input\n                            type=\"email\"\n                            className=\"form-control\"\n                            id=\"exampleInputEmail1\"\n                            aria-describedby=\"emailHelp\"\n                            name=\"email\"\n                            value={email}\n                            onChange={handleInputChange}\n                            required\n                        />\n                    </div>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Contraseña</label>\n                        <input\n                            type=\"password\"\n                            className=\"form-control\"\n                            id=\"exampleInputPassword1\"\n                            name=\"password\"\n                            value={password}\n                            onChange={handleInputChange}\n                            required\n                        />\n                    </div>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Confirme contraseña</label>\n                        <input\n                            type=\"password\"\n                            className=\"form-control\"\n                            id=\"exampleInputPassword2\"\n                            name=\"password2\"\n                            value={password2}\n                            onChange={handleInputChange}\n                            required\n                        />\n                    </div>\n                    <div className=\"mb-3\">\n                        <div className=\"form-check\">\n                            <input\n                                className=\"form-check-input\"\n                                type=\"checkbox\"\n                                name=\"terms\"\n                                checked={terms}\n                                id=\"invalidCheck2\"\n                                onChange={handleInputChange}\n                                required\n                            />\n                        </div>\n                    </div>\n                    <button className=\"w-100 btn btn-lg btn-primary\" type=\"submit\">Crear cuenta</button>\n                </form>\n\n                <div className=\"mt-3\">\n                    <hr />\n                    <Link to=\"/login\"> Ya estoy registrado </Link>\n                </div>\n            </div>\n        </div >\n    )\n\n}\n\nexport default RegisterScreen\n","import React, { useEffect, useState } from 'react'\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\n\r\nimport LoginScreen from '../components/login/LoginScreen';\r\nimport DashboardRouter from './DashboardRouter';\r\nimport PrivateRouter from './PrivateRouter';\r\nimport PublicRouter from './PublicRouter';\r\nimport RegisterScreen from '../components/login/RegisterScreen';\r\nimport { firebase } from '../firebase/firebase-config'\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\n\r\n\r\n\r\n\r\nconst AppRouter = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const [isReady, setIsReady] = useState(true);\r\n\r\n    const [isLogged, setIsLogged] = useState(false);\r\n\r\n\r\n    const lastPath = localStorage.getItem('lastPath') || '/marvel';\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged( (user) => {\r\n            // console.log(user);\r\n            if( user?.uid ){\r\n                setIsLogged(true);\r\n                dispatch( login( user.uid, user.displayName ) );\r\n            }else{\r\n                setIsLogged(false);\r\n            }\r\n            setIsReady(false);\r\n        })\r\n    }, [dispatch, setIsLogged, setIsReady]);\r\n\r\n    if(isReady){\r\n        return (\r\n            <div className=\"d-flex justify-content-center mt-5\">\r\n                <div className=\"spinner-grow text-warning\" role=\"status\" aria-hidden=\"true\">\r\n                </div>\r\n            </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n        <BrowserRouter>        \r\n            <Routes>\r\n                {/* <Route path=\"/login\" element={<LoginScreen />} /> */}\r\n                <Route path=\"/register\" element={<RegisterScreen />} />\r\n                <Route path=\"/login\" element={\r\n                    <PublicRouter isLogged={ isLogged } lastPath={ lastPath }>\r\n                        <LoginScreen />\r\n                    </PublicRouter>\r\n                } />\r\n\r\n\r\n                <Route path=\"/*\" element={\r\n                    <PrivateRouter isLogged={ isLogged }>\r\n                        <DashboardRouter />\r\n                    </PrivateRouter>\r\n                } />\r\n\r\n            </Routes>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default AppRouter\r\n","import { types } from \"../types/types\";\r\n\r\n// state = {\r\n//     uid='4as4f6s51s16v6svsdc',\r\n//     displayName: 'Daniel Duque'\r\n// }\r\n\r\n\r\nexport const authReducer = (state = {}, action) =>{\r\n    switch (action.type) {\r\n        case types.login:\r\n            return{\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n        case types.logout:\r\n            return{ }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return{\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n        case types.uiRemoveError:\r\n            return{\r\n                ...state,\r\n                msgError: null\r\n            }\r\n\r\n        case types.uiStartLoading:\r\n            return{\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        \r\n        case types.uiFinishLoading:\r\n            return{\r\n                ...state,\r\n                loading: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { authReducer } from \"../reducers/authReducer\";\r\nimport { uiReducer } from \"../reducers/uiReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n})\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n    )","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport AppRouter from './routers/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nconst HeroesApp = () => {\r\n\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport default HeroesApp\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport HeroesApp from './HeroesApp';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <HeroesApp />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}